/**
 * generated by Xtext 2.11.0
 */
package ac.soton.xeventb.xcontext.tests;

import ac.soton.xeventb.tests.common.AssertContextExtensions;
import ac.soton.xeventb.tests.common.AssertExtensions;
import ac.soton.xeventb.xcontext.tests.XContextInjectorProvider;
import com.google.inject.Inject;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.XtextRunner;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eventb.emf.core.context.Context;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(XtextRunner.class)
@InjectWith(XContextInjectorProvider.class)
@SuppressWarnings("all")
public class XContextParsingTest {
  @Inject
  @Extension
  private ParseHelper<Context> parseHelper;
  
  @Extension
  private AssertExtensions _assertExtensions = new AssertExtensions();
  
  @Extension
  private AssertContextExtensions _assertContextExtensions = new AssertContextExtensions();
  
  /**
   * Manually register any EPackage required for running the tests.
   */
  @Before
  public void registerEPackages() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method registerContextEPackage() from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testContextClauseSuccessful() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContext(Object, String, String) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testContextClauseSuccessful_ML_COMMENT() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContext(Object, String, String) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testContextClauseSuccessful_SL_COMMENT() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContext(Object, String, String) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testContextClauseFailed_ErrornousName() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("context 0c");
      _builder.newLine();
      _builder.append("end");
      _builder.newLine();
      final String testInput = _builder.toString();
      final Context result = this.parseHelper.parse(testInput);
      Assert.assertNotNull(result);
      final EList<Resource.Diagnostic> errors = result.eResource().getErrors();
      this._assertExtensions.assertNotEmpty(errors);
      this._assertExtensions.assertLength(errors, 1);
      this._assertExtensions.assertErrorDetails(errors.get(0), 
        "extraneous input \'0\' expecting RULE_ID", null, 9, 1);
      Assert.assertTrue((result instanceof Context));
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  @Test
  public void testSetsClauseSuccessful_Sets1() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testSetsClauseSuccessful_Sets2() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testSetsClauseSuccessful_Constants1() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testSetsClauseSuccessful_Constants2() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testSetsClauseSuccessful_Axioms1() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
  
  @Test
  public void testSetsClauseSuccessful_Axioms2() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method assertContextExtendsNames(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextSets(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextConstants(Object, String...) from the type AssertContextExtensions refers to the missing type Object"
      + "\nThe method assertContextAxioms(Object, String...) from the type AssertContextExtensions refers to the missing type Object");
  }
}
