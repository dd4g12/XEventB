/*
 * generated by Xtext 2.15.0
 */
grammar InternalXMachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.xeventb.xmachine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.xeventb.xmachine.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.xeventb.xmachine.services.XMachineGrammarAccess;

}

@parser::members {

 	private XMachineGrammarAccess grammarAccess;

    public InternalXMachineParser(TokenStream input, XMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Machine";
   	}

   	@Override
   	protected XMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMachine
entryRuleMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMachineRule()); }
	iv_ruleMachine=ruleMachine
	{ $current=$iv_ruleMachine.current; }
	EOF;

// Rule Machine
ruleMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMachineAccess().getMachineAction_0(),
					$current);
			}
		)
		otherlv_1='machine'
		{
			newLeafNode(otherlv_1, grammarAccess.getMachineAccess().getMachineKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMachineAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getMachineAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='refines'
								{
									newLeafNode(otherlv_4, grammarAccess.getMachineAccess().getRefinesKeyword_3_0_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getMachineRule());
											}
										}
										otherlv_5=RULE_ID
										{
											newLeafNode(otherlv_5, grammarAccess.getMachineAccess().getRefinesMachineCrossReference_3_0_1_0());
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMachineAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='sees'
								{
									newLeafNode(otherlv_6, grammarAccess.getMachineAccess().getSeesKeyword_3_1_0());
								}
								(
									(
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getMachineRule());
											}
										}
										otherlv_7=RULE_ID
										{
											newLeafNode(otherlv_7, grammarAccess.getMachineAccess().getSeesContextCrossReference_3_1_1_0());
										}
									)
								)+
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMachineAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getMachineAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getMachineAccess().getExtensionsMIncludesParserRuleCall_3_2_0());
									}
									lv_extensions_8_0=ruleMIncludes
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getMachineRule());
										}
										add(
											$current,
											"extensions",
											lv_extensions_8_0,
											"ac.soton.xeventb.xmachine.XMachine.MIncludes");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMachineAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getMachineAccess().getUnorderedGroup_3());
				}
		)
		(
			otherlv_9='variables'
			{
				newLeafNode(otherlv_9, grammarAccess.getMachineAccess().getVariablesKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getVariablesXVariableParserRuleCall_4_1_0());
					}
					lv_variables_10_0=ruleXVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"variables",
							lv_variables_10_0,
							"ac.soton.xeventb.xmachine.XMachine.XVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_11='invariants'
			{
				newLeafNode(otherlv_11, grammarAccess.getMachineAccess().getInvariantsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getInvariantsXInvariantParserRuleCall_5_1_0());
					}
					lv_invariants_12_0=ruleXInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"invariants",
							lv_invariants_12_0,
							"ac.soton.xeventb.xmachine.XMachine.XInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_13='variants'
			{
				newLeafNode(otherlv_13, grammarAccess.getMachineAccess().getVariantsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getVariantsXVariantParserRuleCall_6_1_0());
					}
					lv_variants_14_0=ruleXVariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"variants",
							lv_variants_14_0,
							"ac.soton.xeventb.xmachine.XMachine.XVariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_15='events'
			{
				newLeafNode(otherlv_15, grammarAccess.getMachineAccess().getEventsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getEventsXEventParserRuleCall_7_1_0());
					}
					lv_events_16_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_16_0,
							"ac.soton.xeventb.xmachine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getEventsXEventParserRuleCall_7_2_0());
					}
					lv_events_17_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_17_0,
							"ac.soton.xeventb.xmachine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMachineAccess().getExtensionsXGroupParserRuleCall_8_0());
				}
				lv_extensions_18_0=ruleXGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMachineRule());
					}
					add(
						$current,
						"extensions",
						lv_extensions_18_0,
						"ac.soton.xeventb.xmachine.XMachine.XGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_19='end'
		{
			newLeafNode(otherlv_19, grammarAccess.getMachineAccess().getEndKeyword_9());
		}
	)
;

// Entry rule entryRuleMIncludes
entryRuleMIncludes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMIncludesRule()); }
	iv_ruleMIncludes=ruleMIncludes
	{ $current=$iv_ruleMIncludes.current; }
	EOF;

// Rule MIncludes
ruleMIncludes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMIncludesAccess().getMachineInclusionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='includes'
			{
				newLeafNode(otherlv_1, grammarAccess.getMIncludesAccess().getIncludesKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMIncludesAccess().getAbstractMachineMachineCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getMIncludesAccess().getToKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getMIncludesAccess().getConcreteMachineMachineCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			otherlv_5='as'
			{
				newLeafNode(otherlv_5, grammarAccess.getMIncludesAccess().getAsKeyword_3_0());
			}
			(
				(
					lv_prefixes_6_0=RULE_ID
					{
						newLeafNode(lv_prefixes_6_0, grammarAccess.getMIncludesAccess().getPrefixesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
						addWithLastConsumed(
							$current,
							"prefixes",
							lv_prefixes_6_0,
							"ac.soton.xeventb.xmachine.XMachine.ID");
					}
				)
			)
			(
				(
					lv_prefixes_7_0=RULE_ID
					{
						newLeafNode(lv_prefixes_7_0, grammarAccess.getMIncludesAccess().getPrefixesIDTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
						addWithLastConsumed(
							$current,
							"prefixes",
							lv_prefixes_7_0,
							"ac.soton.xeventb.xmachine.XMachine.ID");
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleXVariable
entryRuleXVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableRule()); }
	iv_ruleXVariable=ruleXVariable
	{ $current=$iv_ruleXVariable.current; }
	EOF;

// Rule XVariable
ruleXVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXInvariant
entryRuleXInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantRule()); }
	iv_ruleXInvariant=ruleXInvariant
	{ $current=$iv_ruleXInvariant.current; }
	EOF;

// Rule XInvariant
ruleXInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_theorem_1_0='theorem'
				{
					newLeafNode(lv_theorem_1_0, grammarAccess.getXInvariantAccess().getTheoremTheoremKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXInvariantAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXInvariantAccess().getPredicateXFormulaParserRuleCall_3_0());
				}
				lv_predicate_3_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXInvariantRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_3_0,
						"ac.soton.xeventb.xmachine.XMachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXVariant
entryRuleXVariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantRule()); }
	iv_ruleXVariant=ruleXVariant
	{ $current=$iv_ruleXVariant.current; }
	EOF;

// Rule XVariant
ruleXVariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXVariantAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXVariantAccess().getExpressionXFormulaParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXVariantRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXGroup
entryRuleXGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGroupRule()); }
	iv_ruleXGroup=ruleXGroup
	{ $current=$iv_ruleXGroup.current; }
	EOF;

// Rule XGroup
ruleXGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGroupAccess().getEventCasesAction_0(),
					$current);
			}
		)
		otherlv_1='group'
		{
			newLeafNode(otherlv_1, grammarAccess.getXGroupAccess().getGroupKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXGroupAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getXGroupAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXGroupAccess().getFormalParametersXFormalParameterParserRuleCall_3_1_0());
					}
					lv_formalParameters_4_0=ruleXFormalParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXGroupRule());
						}
						add(
							$current,
							"formalParameters",
							lv_formalParameters_4_0,
							"ac.soton.xeventb.xmachine.XMachine.XFormalParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getXGroupAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXGroupAccess().getFormalParametersXFormalParameterParserRuleCall_3_2_1_0());
						}
						lv_formalParameters_6_0=ruleXFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXGroupRule());
							}
							add(
								$current,
								"formalParameters",
								lv_formalParameters_6_0,
								"ac.soton.xeventb.xmachine.XMachine.XFormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getXGroupAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		(
			otherlv_8='begin'
			{
				newLeafNode(otherlv_8, grammarAccess.getXGroupAccess().getBeginKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXGroupRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getXGroupAccess().getEventsEventCrossReference_4_1_0());
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXGroupRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getXGroupAccess().getEventsEventCrossReference_4_2_0());
					}
				)
			)*
		)?
		otherlv_11='end'
		{
			newLeafNode(otherlv_11, grammarAccess.getXGroupAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleXFormalParameter
entryRuleXFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFormalParameterRule()); }
	iv_ruleXFormalParameter=ruleXFormalParameter
	{ $current=$iv_ruleXFormalParameter.current; }
	EOF;

// Rule XFormalParameter
ruleXFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXFormalParameterAccess().getFormalParameterAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXFormalParameterAccess().getDirectionXDirectionEnumRuleCall_1_0());
				}
				lv_direction_1_0=ruleXDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFormalParameterRule());
					}
					set(
						$current,
						"direction",
						lv_direction_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXFormalParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXFormalParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXEvent
entryRuleXEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventRule()); }
	iv_ruleXEvent=ruleXEvent
	{ $current=$iv_ruleXEvent.current; }
	EOF;

// Rule XEvent
ruleXEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXEventAccess().getConvergenceXConvergenceEnumRuleCall_1_0());
				}
				lv_convergence_1_0=ruleXConvergence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXEventRule());
					}
					set(
						$current,
						"convergence",
						lv_convergence_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XConvergence");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='event'
		{
			newLeafNode(otherlv_2, grammarAccess.getXEventAccess().getEventKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getXEventAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			(
				otherlv_4='refines'
				{
					newLeafNode(otherlv_4, grammarAccess.getXEventAccess().getRefinesKeyword_4_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXEventRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getXEventAccess().getRefinesEventCrossReference_4_0_1_0());
						}
					)
				)+
			)
			    |
			(
				(
					(
						lv_extended_6_0='extends'
						{
							newLeafNode(lv_extended_6_0, grammarAccess.getXEventAccess().getExtendedExtendsKeyword_4_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXEventRule());
							}
							setWithLastConsumed($current, "extended", true, "extends");
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXEventRule());
							}
						}
						otherlv_7=RULE_ID
						{
							newLeafNode(otherlv_7, grammarAccess.getXEventAccess().getRefinesEventCrossReference_4_1_1_0());
						}
					)
				)
			)
		)?
		(
			otherlv_8='any'
			{
				newLeafNode(otherlv_8, grammarAccess.getXEventAccess().getAnyKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXEventAccess().getParametersXParameterParserRuleCall_5_1_0());
					}
					lv_parameters_9_0=ruleXParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEventRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_9_0,
							"ac.soton.xeventb.xmachine.XMachine.XParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getXEventAccess().getExtensionsXGroupOrEventParserRuleCall_6_0());
				}
				lv_extensions_10_0=ruleXGroupOrEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXEventRule());
					}
					add(
						$current,
						"extensions",
						lv_extensions_10_0,
						"ac.soton.xeventb.xmachine.XMachine.XGroupOrEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_11='where'
			{
				newLeafNode(otherlv_11, grammarAccess.getXEventAccess().getWhereKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXEventAccess().getGuardsXGuardParserRuleCall_7_1_0());
					}
					lv_guards_12_0=ruleXGuard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEventRule());
						}
						add(
							$current,
							"guards",
							lv_guards_12_0,
							"ac.soton.xeventb.xmachine.XMachine.XGuard");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_13='then'
			{
				newLeafNode(otherlv_13, grammarAccess.getXEventAccess().getThenKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_8_1_0());
					}
					lv_actions_14_0=ruleXAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEventRule());
						}
						add(
							$current,
							"actions",
							lv_actions_14_0,
							"ac.soton.xeventb.xmachine.XMachine.XAction");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_15='with'
			{
				newLeafNode(otherlv_15, grammarAccess.getXEventAccess().getWithKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_9_1_0());
					}
					lv_witnesses_16_0=ruleXWitness
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEventRule());
						}
						add(
							$current,
							"witnesses",
							lv_witnesses_16_0,
							"ac.soton.xeventb.xmachine.XMachine.XWitness");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_17='end'
		{
			newLeafNode(otherlv_17, grammarAccess.getXEventAccess().getEndKeyword_10());
		}
	)
;

// Entry rule entryRuleEventSync
entryRuleEventSync returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventSyncRule()); }
	iv_ruleEventSync=ruleEventSync
	{ $current=$iv_ruleEventSync.current; }
	EOF;

// Rule EventSync
ruleEventSync returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventSyncAccess().getEventSynchronisationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='synchronises'
			{
				newLeafNode(otherlv_1, grammarAccess.getEventSyncAccess().getSynchronisesKeyword_1_0());
			}
			otherlv_2='event'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventSyncAccess().getEventKeyword_1_1());
			}
			(
				(
					(
						lv_prefix_3_0=RULE_ID
						{
							newLeafNode(lv_prefix_3_0, grammarAccess.getEventSyncAccess().getPrefixIDTerminalRuleCall_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEventSyncRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_3_0,
								"ac.soton.xeventb.xmachine.XMachine.ID");
						}
					)
				)
				otherlv_4='.'
				{
					newLeafNode(otherlv_4, grammarAccess.getEventSyncAccess().getFullStopKeyword_1_2_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventSyncRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getEventSyncAccess().getSynchronisedEventEventCrossReference_1_3_0());
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getEventSyncAccess().getXSyncParametersParserRuleCall_2());
			}
			ruleXSyncParameters
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleXSyncParameters
entryRuleXSyncParameters returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXSyncParametersRule()); }
	iv_ruleXSyncParameters=ruleXSyncParameters
	{ $current=$iv_ruleXSyncParameters.current.getText(); }
	EOF;

// Rule XSyncParameters
ruleXSyncParameters returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXSyncParametersAccess().getLeftSquareBracketKeyword_0());
		}
		(
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getXSyncParametersAccess().getIDTerminalRuleCall_1());
			}
		)+
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXSyncParametersAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleGroupSync
entryRuleGroupSync returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupSyncRule()); }
	iv_ruleGroupSync=ruleGroupSync
	{ $current=$iv_ruleGroupSync.current; }
	EOF;

// Rule GroupSync
ruleGroupSync returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupSyncAccess().getEventSynchronisationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='synchronises'
			{
				newLeafNode(otherlv_1, grammarAccess.getGroupSyncAccess().getSynchronisesKeyword_1_0());
			}
			(
				(
					(
						lv_prefix_2_0=RULE_ID
						{
							newLeafNode(lv_prefix_2_0, grammarAccess.getGroupSyncAccess().getPrefixIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGroupSyncRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_2_0,
								"ac.soton.xeventb.xmachine.XMachine.ID");
						}
					)
				)
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getGroupSyncAccess().getFullStopKeyword_1_1_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupSyncRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getGroupSyncAccess().getSynchronisedCasesEventCasesCrossReference_1_2_0());
					}
				)
			)
		)
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getGroupSyncAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGroupSyncAccess().getActualParametersXParParserRuleCall_2_1_0());
					}
					lv_actualParameters_6_0=ruleXPar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGroupSyncRule());
						}
						add(
							$current,
							"actualParameters",
							lv_actualParameters_6_0,
							"ac.soton.xeventb.xmachine.XMachine.XPar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getGroupSyncAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGroupSyncAccess().getActualParametersXParParserRuleCall_2_2_1_0());
						}
						lv_actualParameters_8_0=ruleXPar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGroupSyncRule());
							}
							add(
								$current,
								"actualParameters",
								lv_actualParameters_8_0,
								"ac.soton.xeventb.xmachine.XMachine.XPar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getGroupSyncAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleXGroupOrEvent
entryRuleXGroupOrEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGroupOrEventRule()); }
	iv_ruleXGroupOrEvent=ruleXGroupOrEvent
	{ $current=$iv_ruleXGroupOrEvent.current; }
	EOF;

// Rule XGroupOrEvent
ruleXGroupOrEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXGroupOrEventAccess().getGroupSyncParserRuleCall_0());
		}
		this_GroupSync_0=ruleGroupSync
		{
			$current = $this_GroupSync_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXGroupOrEventAccess().getEventSyncParserRuleCall_1());
		}
		this_EventSync_1=ruleEventSync
		{
			$current = $this_EventSync_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXParameter
entryRuleXParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterRule()); }
	iv_ruleXParameter=ruleXParameter
	{ $current=$iv_ruleXParameter.current; }
	EOF;

// Rule XParameter
ruleXParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXGuard
entryRuleXGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardRule()); }
	iv_ruleXGuard=ruleXGuard
	{ $current=$iv_ruleXGuard.current; }
	EOF;

// Rule XGuard
ruleXGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_theorem_1_0='theorem'
				{
					newLeafNode(lv_theorem_1_0, grammarAccess.getXGuardAccess().getTheoremTheoremKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXGuardAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXGuardAccess().getPredicateXFormulaParserRuleCall_3_0());
				}
				lv_predicate_3_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXGuardRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_3_0,
						"ac.soton.xeventb.xmachine.XMachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXWitness
entryRuleXWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessRule()); }
	iv_ruleXWitness=ruleXWitness
	{ $current=$iv_ruleXWitness.current; }
	EOF;

// Rule XWitness
ruleXWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXWitnessAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXWitnessAccess().getPredicateXFormulaParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWitnessRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXAction
entryRuleXAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionRule()); }
	iv_ruleXAction=ruleXAction
	{ $current=$iv_ruleXAction.current; }
	EOF;

// Rule XAction
ruleXAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXActionAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXActionAccess().getActionXFormulaParserRuleCall_2_0());
				}
				lv_action_2_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXActionRule());
					}
					set(
						$current,
						"action",
						lv_action_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXPar
entryRuleXPar returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXParRule()); }
	iv_ruleXPar=ruleXPar
	{ $current=$iv_ruleXPar.current.getText(); }
	EOF;

// Rule XPar
ruleXPar returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getXParAccess().getSTRINGTerminalRuleCall());
	}
;

// Entry rule entryRuleXFormula
entryRuleXFormula returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXFormulaRule()); }
	iv_ruleXFormula=ruleXFormula
	{ $current=$iv_ruleXFormula.current.getText(); }
	EOF;

// Rule XFormula
ruleXFormula returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_IDENTIFIER_KEYWORDParserRuleCall_0());
		}
		this_EVENTB_IDENTIFIER_KEYWORD_0=ruleEVENTB_IDENTIFIER_KEYWORD
		{
			$current.merge(this_EVENTB_IDENTIFIER_KEYWORD_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_PREDICATE_SYMBOLSParserRuleCall_1());
		}
		this_EVENTB_PREDICATE_SYMBOLS_1=ruleEVENTB_PREDICATE_SYMBOLS
		{
			$current.merge(this_EVENTB_PREDICATE_SYMBOLS_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_EXPRESSION_SYMBOLSParserRuleCall_2());
		}
		this_EVENTB_EXPRESSION_SYMBOLS_2=ruleEVENTB_EXPRESSION_SYMBOLS
		{
			$current.merge(this_EVENTB_EXPRESSION_SYMBOLS_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_3=RULE_ID
		{
			$current.merge(this_ID_3);
		}
		{
			newLeafNode(this_ID_3, grammarAccess.getXFormulaAccess().getIDTerminalRuleCall_3());
		}
		    |
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getXFormulaAccess().getINTTerminalRuleCall_4());
		}
	)+
;

// Entry rule entryRuleEVENTB_IDENTIFIER_KEYWORD
entryRuleEVENTB_IDENTIFIER_KEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_IDENTIFIER_KEYWORDRule()); }
	iv_ruleEVENTB_IDENTIFIER_KEYWORD=ruleEVENTB_IDENTIFIER_KEYWORD
	{ $current=$iv_ruleEVENTB_IDENTIFIER_KEYWORD.current.getText(); }
	EOF;

// Rule EVENTB_IDENTIFIER_KEYWORD
ruleEVENTB_IDENTIFIER_KEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BOOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBOOLKeyword_0());
		}
		    |
		kw='FALSE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFALSEKeyword_1());
		}
		    |
		kw='TRUE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getTRUEKeyword_2());
		}
		    |
		kw='bool'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBoolKeyword_3());
		}
		    |
		kw='card'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getCardKeyword_4());
		}
		    |
		kw='dom'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDomKeyword_5());
		}
		    |
		kw='finite'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFiniteKeyword_6());
		}
		    |
		kw='id'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getIdKeyword_7());
		}
		    |
		kw='inter'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getInterKeyword_8());
		}
		    |
		kw='max'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMaxKeyword_9());
		}
		    |
		kw='min'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMinKeyword_10());
		}
		    |
		kw='mod'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getModKeyword_11());
		}
		    |
		kw='pred'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPredKeyword_12());
		}
		    |
		kw='prj1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj1Keyword_13());
		}
		    |
		kw='prj2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj2Keyword_14());
		}
		    |
		kw='ran'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getRanKeyword_15());
		}
		    |
		kw='succ'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getSuccKeyword_16());
		}
		    |
		kw='union'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getUnionKeyword_17());
		}
		    |
		kw='\u21151'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNDigitOneKeyword_18());
		}
		    |
		kw='\u2115'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNKeyword_19());
		}
		    |
		kw='\u21191'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPDigitOneKeyword_20());
		}
		    |
		kw='\u2119'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPKeyword_21());
		}
		    |
		kw='\u2124'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalZKeyword_22());
		}
	)
;

// Entry rule entryRuleEVENTB_PREDICATE_SYMBOLS
entryRuleEVENTB_PREDICATE_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_PREDICATE_SYMBOLSRule()); }
	iv_ruleEVENTB_PREDICATE_SYMBOLS=ruleEVENTB_PREDICATE_SYMBOLS
	{ $current=$iv_ruleEVENTB_PREDICATE_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_PREDICATE_SYMBOLS
ruleEVENTB_PREDICATE_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftParenthesisKeyword_0());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightParenthesisKeyword_1());
		}
		    |
		kw='\u21D4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftRightDoubleArrowKeyword_2());
		}
		    |
		kw='\u21D2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightwardsDoubleArrowKeyword_3());
		}
		    |
		kw='\u2227'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalAndKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getAmpersandKeyword_5());
		}
		    |
		kw='\u2228'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalOrKeyword_6());
		}
		    |
		kw='\u00AC'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotSignKeyword_7());
		}
		    |
		kw='\u22A4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getDownTackKeyword_8());
		}
		    |
		kw='\u22A5'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getUpTackKeyword_9());
		}
		    |
		kw='\u2200'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getForAllKeyword_10());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getExclamationMarkKeyword_11());
		}
		    |
		kw='\u2203'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getThereExistsKeyword_12());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNumberSignKeyword_13());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getCommaKeyword_14());
		}
		    |
		kw='\u00B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getMiddleDotKeyword_15());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getFullStopKeyword_16());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getEqualsSignKeyword_17());
		}
		    |
		kw='\u2260'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotEqualToKeyword_18());
		}
		    |
		kw='\u2264'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanOrEqualToKeyword_19());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanSignKeyword_20());
		}
		    |
		kw='\u2265'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanOrEqualToKeyword_21());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanSignKeyword_22());
		}
		    |
		kw='\u2208'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getElementOfKeyword_23());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getColonKeyword_24());
		}
		    |
		kw='\u2209'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotAnElementOfKeyword_25());
		}
		    |
		kw='\u2282'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfKeyword_26());
		}
		    |
		kw='\u2284'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotASubsetOfKeyword_27());
		}
		    |
		kw='\u2286'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfOrEqualToKeyword_28());
		}
		    |
		kw='\u2288'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNeitherASubsetOfNorEqualToKeyword_29());
		}
		    |
		kw='partition'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getPartitionKeyword_30());
		}
	)
;

// Entry rule entryRuleEVENTB_EXPRESSION_SYMBOLS
entryRuleEVENTB_EXPRESSION_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_EXPRESSION_SYMBOLSRule()); }
	iv_ruleEVENTB_EXPRESSION_SYMBOLS=ruleEVENTB_EXPRESSION_SYMBOLS
	{ $current=$iv_ruleEVENTB_EXPRESSION_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_EXPRESSION_SYMBOLS
ruleEVENTB_EXPRESSION_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\u2194'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftRightArrowKeyword_0());
		}
		    |
		kw='\uE100'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE100Keyword_1());
		}
		    |
		kw='\uE101'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE101Keyword_2());
		}
		    |
		kw='\uE102'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE102Keyword_3());
		}
		    |
		kw='\u21F8'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithVerticalStrokeKeyword_4());
		}
		    |
		kw='\u2192'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowKeyword_5());
		}
		    |
		kw='\u2914'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailWithVerticalStrokeKeyword_6());
		}
		    |
		kw='\u21A3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailKeyword_7());
		}
		    |
		kw='\u2900'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithVerticalStrokeKeyword_8());
		}
		    |
		kw='\u21A0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowKeyword_9());
		}
		    |
		kw='\u2916'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithTailKeyword_10());
		}
		    |
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftCurlyBracketKeyword_11());
		}
		    |
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightCurlyBracketKeyword_12());
		}
		    |
		kw='\u21A6'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowFromBarKeyword_13());
		}
		    |
		kw='\u2205'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getEmptySetKeyword_14());
		}
		    |
		kw='\u2229'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getIntersectionKeyword_15());
		}
		    |
		kw='\u222A'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getUnionKeyword_16());
		}
		    |
		kw='\u2216'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSetMinusKeyword_17());
		}
		    |
		kw='\u00D7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMultiplicationSignKeyword_18());
		}
		    |
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftSquareBracketKeyword_19());
		}
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightSquareBracketKeyword_20());
		}
		    |
		kw='\uE103'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE103Keyword_21());
		}
		    |
		kw='\u2218'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRingOperatorKeyword_22());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSemicolonKeyword_23());
		}
		    |
		kw='\u2297'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircledTimesKeyword_24());
		}
		    |
		kw='\u2225'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getParallelToKeyword_25());
		}
		    |
		kw='\u223C'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTildeOperatorKeyword_26());
		}
		    |
		kw='\u25C1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteLeftPointingTriangleKeyword_27());
		}
		    |
		kw='\u2A64'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationDomainAntirestrictionKeyword_28());
		}
		    |
		kw='\u25B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteRightPointingTriangleKeyword_29());
		}
		    |
		kw='\u2A65'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationRangeAntirestrictionKeyword_30());
		}
		    |
		kw='\u03BB'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getGreekSmallLetterLamdaKeyword_31());
		}
		    |
		(
			kw='%'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPercentSignKeyword_32_0());
			}
			kw='\u22C2'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryIntersectionKeyword_32_1());
			}
		)
		    |
		kw='\u22C3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryUnionKeyword_33());
		}
		    |
		kw='\u2223'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDividesKeyword_34());
		}
		    |
		kw='\u2025'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTwoDotLeaderKeyword_35());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPlusSignKeyword_36());
		}
		    |
		kw='\u2212'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMinusSignKeyword_37());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getHyphenMinusKeyword_38());
		}
		    |
		kw='\u2217'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskOperatorKeyword_39());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskKeyword_40());
		}
		    |
		kw='\u00F7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDivisionSignKeyword_41());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSolidusKeyword_42());
		}
		    |
		kw='^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircumflexAccentKeyword_43());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getBackslashKeyword_44());
		}
	)
;

// Rule XDirection
ruleXDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getXDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXDirectionAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getXDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXDirectionAccess().getOutEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule XConvergence
ruleXConvergence returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ordinary'
			{
				$current = grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='convergent'
			{
				$current = grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='anticipated'
			{
				$current = grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC') ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC'|'0'..'9'|'\'')*;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
