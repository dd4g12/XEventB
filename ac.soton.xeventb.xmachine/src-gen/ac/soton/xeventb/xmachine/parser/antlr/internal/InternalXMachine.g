/*
 * generated by Xtext 2.13.0
 */
grammar InternalXMachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.xeventb.xmachine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.xeventb.xmachine.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.xeventb.xmachine.services.XMachineGrammarAccess;

}

@parser::members {

 	private XMachineGrammarAccess grammarAccess;

    public InternalXMachineParser(TokenStream input, XMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Machine";
   	}

   	@Override
   	protected XMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMachine
entryRuleMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMachineRule()); }
	iv_ruleMachine=ruleMachine
	{ $current=$iv_ruleMachine.current; }
	EOF;

// Rule Machine
ruleMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMachineAccess().getMachineAction_0(),
					$current);
			}
		)
		otherlv_1='machine'
		{
			newLeafNode(otherlv_1, grammarAccess.getMachineAccess().getMachineKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMachineAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			otherlv_3='refines'
			{
				newLeafNode(otherlv_3, grammarAccess.getMachineAccess().getRefinesKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMachineRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getMachineAccess().getRefinesMachineCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			otherlv_5='sees'
			{
				newLeafNode(otherlv_5, grammarAccess.getMachineAccess().getSeesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMachineRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getMachineAccess().getSeesContextCrossReference_4_1_0());
					}
				)
			)+
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMachineAccess().getExtensionsMIncludesParserRuleCall_5_0());
				}
				lv_extensions_7_0=ruleMIncludes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMachineRule());
					}
					add(
						$current,
						"extensions",
						lv_extensions_7_0,
						"ac.soton.xeventb.xmachine.XMachine.MIncludes");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_8='variables'
			{
				newLeafNode(otherlv_8, grammarAccess.getMachineAccess().getVariablesKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getVariablesXVariableParserRuleCall_6_1_0());
					}
					lv_variables_9_0=ruleXVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"variables",
							lv_variables_9_0,
							"ac.soton.xeventb.xmachine.XMachine.XVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_10='invariants'
			{
				newLeafNode(otherlv_10, grammarAccess.getMachineAccess().getInvariantsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getInvariantsXInvariantParserRuleCall_7_1_0());
					}
					lv_invariants_11_0=ruleXInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"invariants",
							lv_invariants_11_0,
							"ac.soton.xeventb.xmachine.XMachine.XInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_12='variant'
			{
				newLeafNode(otherlv_12, grammarAccess.getMachineAccess().getVariantKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getVariantXVariantParserRuleCall_8_1_0());
					}
					lv_variant_13_0=ruleXVariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						set(
							$current,
							"variant",
							lv_variant_13_0,
							"ac.soton.xeventb.xmachine.XMachine.XVariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='events'
			{
				newLeafNode(otherlv_14, grammarAccess.getMachineAccess().getEventsKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getEventsXEventParserRuleCall_9_1_0());
					}
					lv_events_15_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_15_0,
							"ac.soton.xeventb.xmachine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMachineAccess().getEventsXEventParserRuleCall_9_2_0());
					}
					lv_events_16_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_16_0,
							"ac.soton.xeventb.xmachine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMachineAccess().getExtensionsXGroupParserRuleCall_10_0());
				}
				lv_extensions_17_0=ruleXGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMachineRule());
					}
					add(
						$current,
						"extensions",
						lv_extensions_17_0,
						"ac.soton.xeventb.xmachine.XMachine.XGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_18='end'
		{
			newLeafNode(otherlv_18, grammarAccess.getMachineAccess().getEndKeyword_11());
		}
	)
;

// Entry rule entryRuleMIncludes
entryRuleMIncludes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMIncludesRule()); }
	iv_ruleMIncludes=ruleMIncludes
	{ $current=$iv_ruleMIncludes.current; }
	EOF;

// Rule MIncludes
ruleMIncludes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMIncludesAccess().getMachineInclusionAction_0(),
					$current);
			}
		)
		(
			otherlv_1='includes'
			{
				newLeafNode(otherlv_1, grammarAccess.getMIncludesAccess().getIncludesKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMIncludesAccess().getAbstractMachineMachineCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_3='to'
			{
				newLeafNode(otherlv_3, grammarAccess.getMIncludesAccess().getToKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getMIncludesAccess().getConcreteMachineMachineCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			otherlv_5='as'
			{
				newLeafNode(otherlv_5, grammarAccess.getMIncludesAccess().getAsKeyword_3_0());
			}
			(
				(
					lv_prefixes_6_0=RULE_ID
					{
						newLeafNode(lv_prefixes_6_0, grammarAccess.getMIncludesAccess().getPrefixesIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
						addWithLastConsumed(
							$current,
							"prefixes",
							lv_prefixes_6_0,
							"ac.soton.xeventb.xmachine.XMachine.ID");
					}
				)
			)
			(
				(
					lv_prefixes_7_0=RULE_ID
					{
						newLeafNode(lv_prefixes_7_0, grammarAccess.getMIncludesAccess().getPrefixesIDTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMIncludesRule());
						}
						addWithLastConsumed(
							$current,
							"prefixes",
							lv_prefixes_7_0,
							"ac.soton.xeventb.xmachine.XMachine.ID");
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleXVariable
entryRuleXVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableRule()); }
	iv_ruleXVariable=ruleXVariable
	{ $current=$iv_ruleXVariable.current; }
	EOF;

// Rule XVariable
ruleXVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXInvariant
entryRuleXInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantRule()); }
	iv_ruleXInvariant=ruleXInvariant
	{ $current=$iv_ruleXInvariant.current; }
	EOF;

// Rule XInvariant
ruleXInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXInvariantAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXInvariantAccess().getPredicateXPredicateParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXInvariantRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXInvariantAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXVariant
entryRuleXVariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantRule()); }
	iv_ruleXVariant=ruleXVariant
	{ $current=$iv_ruleXVariant.current; }
	EOF;

// Rule XVariant
ruleXVariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXVariantAccess().getExpressionXPredicateParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleXPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXVariantRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXGroup
entryRuleXGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGroupRule()); }
	iv_ruleXGroup=ruleXGroup
	{ $current=$iv_ruleXGroup.current; }
	EOF;

// Rule XGroup
ruleXGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGroupAccess().getEventCasesAction_0(),
					$current);
			}
		)
		otherlv_1='group'
		{
			newLeafNode(otherlv_1, grammarAccess.getXGroupAccess().getGroupKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXGroupAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getXGroupAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXGroupAccess().getFormalParametersXFormalParameterParserRuleCall_3_1_0());
					}
					lv_formalParameters_4_0=ruleXFormalParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXGroupRule());
						}
						add(
							$current,
							"formalParameters",
							lv_formalParameters_4_0,
							"ac.soton.xeventb.xmachine.XMachine.XFormalParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getXGroupAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXGroupAccess().getFormalParametersXFormalParameterParserRuleCall_3_2_1_0());
						}
						lv_formalParameters_6_0=ruleXFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXGroupRule());
							}
							add(
								$current,
								"formalParameters",
								lv_formalParameters_6_0,
								"ac.soton.xeventb.xmachine.XMachine.XFormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getXGroupAccess().getRightParenthesisKeyword_3_3());
			}
		)?
		otherlv_8='begin'
		{
			newLeafNode(otherlv_8, grammarAccess.getXGroupAccess().getBeginKeyword_4());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXGroupRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getXGroupAccess().getEventsEventCrossReference_5_0_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getXGroupAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXGroupRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getXGroupAccess().getEventsEventCrossReference_5_1_1_0());
						}
					)
				)
			)*
		)?
		otherlv_12='end'
		{
			newLeafNode(otherlv_12, grammarAccess.getXGroupAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleXFormalParameter
entryRuleXFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFormalParameterRule()); }
	iv_ruleXFormalParameter=ruleXFormalParameter
	{ $current=$iv_ruleXFormalParameter.current; }
	EOF;

// Rule XFormalParameter
ruleXFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXFormalParameterAccess().getFormalParameterAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXFormalParameterAccess().getDirectionXDirectionEnumRuleCall_1_0());
				}
				lv_direction_1_0=ruleXDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFormalParameterRule());
					}
					set(
						$current,
						"direction",
						lv_direction_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXFormalParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXFormalParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXEvent
entryRuleXEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventRule()); }
	iv_ruleXEvent=ruleXEvent
	{ $current=$iv_ruleXEvent.current; }
	EOF;

// Rule XEvent
ruleXEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventAccess().getEventAction_0(),
					$current);
			}
		)
		otherlv_1='event'
		{
			newLeafNode(otherlv_1, grammarAccess.getXEventAccess().getEventKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXEventAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getXEventAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_extended_4_0='extended'
									{
										newLeafNode(lv_extended_4_0, grammarAccess.getXEventAccess().getExtendedExtendedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXEventRule());
										}
										setWithLastConsumed($current, "extended", true, "extended");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getXEventAccess().getConvergenceXConvergenceEnumRuleCall_3_1_0());
									}
									lv_convergence_5_0=ruleXConvergence
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXEventRule());
										}
										set(
											$current,
											"convergence",
											lv_convergence_5_0,
											"ac.soton.xeventb.xmachine.XMachine.XConvergence");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getXEventAccess().getUnorderedGroup_3());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXEventAccess().getExtensionsXGroupOrEventParserRuleCall_4_0());
				}
				lv_extensions_6_0=ruleXGroupOrEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXEventRule());
					}
					add(
						$current,
						"extensions",
						lv_extensions_6_0,
						"ac.soton.xeventb.xmachine.XMachine.XGroupOrEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_7='refines'
			{
				newLeafNode(otherlv_7, grammarAccess.getXEventAccess().getRefinesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getXEventAccess().getRefinesEventCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			(
				(
					otherlv_9='with'
					{
						newLeafNode(otherlv_9, grammarAccess.getXEventAccess().getWithKeyword_6_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_6_0_0_1_0());
							}
							lv_witnesses_10_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_10_0,
									"ac.soton.xeventb.xmachine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_11='begin'
				{
					newLeafNode(otherlv_11, grammarAccess.getXEventAccess().getBeginKeyword_6_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_6_0_2_0());
						}
						lv_actions_12_0=ruleXAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"actions",
								lv_actions_12_0,
								"ac.soton.xeventb.xmachine.XMachine.XAction");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_13='when'
				{
					newLeafNode(otherlv_13, grammarAccess.getXEventAccess().getWhenKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getGuardsXGuardParserRuleCall_6_1_1_0());
						}
						lv_guards_14_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"guards",
								lv_guards_14_0,
								"ac.soton.xeventb.xmachine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_15='with'
					{
						newLeafNode(otherlv_15, grammarAccess.getXEventAccess().getWithKeyword_6_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_6_1_2_1_0());
							}
							lv_witnesses_16_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_16_0,
									"ac.soton.xeventb.xmachine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_17='then'
					{
						newLeafNode(otherlv_17, grammarAccess.getXEventAccess().getThenKeyword_6_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_6_1_3_1_0());
							}
							lv_actions_18_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"actions",
									lv_actions_18_0,
									"ac.soton.xeventb.xmachine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				otherlv_19='any'
				{
					newLeafNode(otherlv_19, grammarAccess.getXEventAccess().getAnyKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getParametersXParameterParserRuleCall_6_2_1_0());
						}
						lv_parameters_20_0=ruleXParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_20_0,
								"ac.soton.xeventb.xmachine.XMachine.XParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_21='where'
				{
					newLeafNode(otherlv_21, grammarAccess.getXEventAccess().getWhereKeyword_6_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getGuardsXGuardParserRuleCall_6_2_3_0());
						}
						lv_guards_22_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"guards",
								lv_guards_22_0,
								"ac.soton.xeventb.xmachine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_23='with'
					{
						newLeafNode(otherlv_23, grammarAccess.getXEventAccess().getWithKeyword_6_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_6_2_4_1_0());
							}
							lv_witnesses_24_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_24_0,
									"ac.soton.xeventb.xmachine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_25='then'
					{
						newLeafNode(otherlv_25, grammarAccess.getXEventAccess().getThenKeyword_6_2_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_6_2_5_1_0());
							}
							lv_actions_26_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"actions",
									lv_actions_26_0,
									"ac.soton.xeventb.xmachine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
		)?
		otherlv_27='end'
		{
			newLeafNode(otherlv_27, grammarAccess.getXEventAccess().getEndKeyword_7());
		}
	)
;

// Entry rule entryRuleEventSync
entryRuleEventSync returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventSyncRule()); }
	iv_ruleEventSync=ruleEventSync
	{ $current=$iv_ruleEventSync.current; }
	EOF;

// Rule EventSync
ruleEventSync returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventSyncAccess().getEventSynchronisationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='synchronises'
			{
				newLeafNode(otherlv_1, grammarAccess.getEventSyncAccess().getSynchronisesKeyword_1_0());
			}
			(
				(
					(
						lv_prefix_2_0=RULE_ID
						{
							newLeafNode(lv_prefix_2_0, grammarAccess.getEventSyncAccess().getPrefixIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEventSyncRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_2_0,
								"ac.soton.xeventb.xmachine.XMachine.ID");
						}
					)
				)
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getEventSyncAccess().getFullStopKeyword_1_1_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventSyncRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEventSyncAccess().getSynchronisedEventEventCrossReference_1_2_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleGroupSync
entryRuleGroupSync returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupSyncRule()); }
	iv_ruleGroupSync=ruleGroupSync
	{ $current=$iv_ruleGroupSync.current; }
	EOF;

// Rule GroupSync
ruleGroupSync returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGroupSyncAccess().getEventSynchronisationAction_0(),
					$current);
			}
		)
		(
			otherlv_1='synchronisesGroup'
			{
				newLeafNode(otherlv_1, grammarAccess.getGroupSyncAccess().getSynchronisesGroupKeyword_1_0());
			}
			(
				(
					(
						lv_prefix_2_0=RULE_ID
						{
							newLeafNode(lv_prefix_2_0, grammarAccess.getGroupSyncAccess().getPrefixIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGroupSyncRule());
							}
							setWithLastConsumed(
								$current,
								"prefix",
								lv_prefix_2_0,
								"ac.soton.xeventb.xmachine.XMachine.ID");
						}
					)
				)
				otherlv_3='.'
				{
					newLeafNode(otherlv_3, grammarAccess.getGroupSyncAccess().getFullStopKeyword_1_1_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupSyncRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getGroupSyncAccess().getSynchronisedCasesEventCasesCrossReference_1_2_0());
					}
				)
			)
		)
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getGroupSyncAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					lv_actualParameters_6_0=RULE_ID
					{
						newLeafNode(lv_actualParameters_6_0, grammarAccess.getGroupSyncAccess().getActualParametersIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGroupSyncRule());
						}
						addWithLastConsumed(
							$current,
							"actualParameters",
							lv_actualParameters_6_0,
							"ac.soton.xeventb.xmachine.XMachine.ID");
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getGroupSyncAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						lv_actualParameters_8_0=RULE_ID
						{
							newLeafNode(lv_actualParameters_8_0, grammarAccess.getGroupSyncAccess().getActualParametersIDTerminalRuleCall_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGroupSyncRule());
							}
							addWithLastConsumed(
								$current,
								"actualParameters",
								lv_actualParameters_8_0,
								"ac.soton.xeventb.xmachine.XMachine.ID");
						}
					)
				)
			)*
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getGroupSyncAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleXGroupOrEvent
entryRuleXGroupOrEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGroupOrEventRule()); }
	iv_ruleXGroupOrEvent=ruleXGroupOrEvent
	{ $current=$iv_ruleXGroupOrEvent.current; }
	EOF;

// Rule XGroupOrEvent
ruleXGroupOrEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXGroupOrEventAccess().getGroupSyncParserRuleCall_0());
		}
		this_GroupSync_0=ruleGroupSync
		{
			$current = $this_GroupSync_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXGroupOrEventAccess().getEventSyncParserRuleCall_1());
		}
		this_EventSync_1=ruleEventSync
		{
			$current = $this_EventSync_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXParameter
entryRuleXParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterRule()); }
	iv_ruleXParameter=ruleXParameter
	{ $current=$iv_ruleXParameter.current; }
	EOF;

// Rule XParameter
ruleXParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXGuard
entryRuleXGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardRule()); }
	iv_ruleXGuard=ruleXGuard
	{ $current=$iv_ruleXGuard.current; }
	EOF;

// Rule XGuard
ruleXGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXGuardAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXGuardAccess().getPredicateXPredicateParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXGuardRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXGuardAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXWitness
entryRuleXWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessRule()); }
	iv_ruleXWitness=ruleXWitness
	{ $current=$iv_ruleXWitness.current; }
	EOF;

// Rule XWitness
ruleXWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXWitnessAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXWitnessAccess().getPredicateXPredicateParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWitnessRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXAction
entryRuleXAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionRule()); }
	iv_ruleXAction=ruleXAction
	{ $current=$iv_ruleXAction.current; }
	EOF;

// Rule XAction
ruleXAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXActionAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xeventb.xmachine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXActionAccess().getActionXPredicateParserRuleCall_2_0());
				}
				lv_action_2_0=ruleXPredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXActionRule());
					}
					set(
						$current,
						"action",
						lv_action_2_0,
						"ac.soton.xeventb.xmachine.XMachine.XPredicate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXPredicate
entryRuleXPredicate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXPredicateRule()); }
	iv_ruleXPredicate=ruleXPredicate
	{ $current=$iv_ruleXPredicate.current.getText(); }
	EOF;

// Rule XPredicate
ruleXPredicate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getXPredicateAccess().getSTRINGTerminalRuleCall());
	}
;

// Rule XDirection
ruleXDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getXDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXDirectionAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getXDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXDirectionAccess().getOutEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule XConvergence
ruleXConvergence returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ordinary'
			{
				$current = grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='convergent'
			{
				$current = grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='anticipated'
			{
				$current = grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC') ('a'..'z'|'A'..'Z'|'_'|'i'..'\uFFDC'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
